@using WebApplication1.Models.ViewModel
@model LoginViewModel

@{
    ViewData["Title"] = "Вход";
    Layout = "_Layout"; 
}

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="col-md-4">
        <section>
            <form asp-action="Login" method="post">
                <h2 class="text-center">Вход в систему</h2>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-floating mb-3">
                    <input asp-for="Login" class="form-control" autocomplete="username" />
                    <label asp-for="Login"></label>
                    <span asp-validation-for="Login" class="text-danger"></span>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="Password" class="form-control" autocomplete="current-password" />
                    <label asp-for="Password"></label>
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <div class="form-check mb-3">
                    <input asp-for="RememberMe" class="form-check-input" />
                    <label asp-for="RememberMe" class="form-check-label"></label>
                </div>

                <div class="mb-3">
                    <button type="submit" class="w-100 btn btn-lg btn-primary">Войти</button>
                </div>

                <div class="text-center">
                    <a asp-action="Register" asp-route-returnUrl="@ViewData["ReturnUrl"]">У Вас еще нет аккаунта?  Создать аккаунт</a>
                </div>
            </form>
        </section>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}