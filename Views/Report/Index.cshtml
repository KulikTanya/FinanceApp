@model WebApplication1.Models.ReportViewModel

@{
    ViewData["Title"] = "Создание отчёта";
}

<div class="container py-4">
    <h1 class="mb-4 text-center">@ViewData["Title"]</h1>

    <div class="card mb-4 shadow-sm">
        <div class="card-header bg-light py-2">
            <h5 class="mb-0">Параметры отчёта</h5>
        </div>
        <div class="card-body">
            <form asp-action="Generate" method="post" id="reportForm">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="mb-3 row">
                    <label asp-for="SelectedAccountId" class="col-sm-3 col-form-label">Счёт</label>
                    <div class="col-sm-9">
                        <select asp-for="SelectedAccountId" class="form-select" required>
                            <option value="">Выберите счёт</option>
                            @foreach (var account in Model.Accounts)
                            {
                                <option value="@account.Id">@account.AccountNumber</option>
                            }
                        </select>
                        <span asp-validation-for="SelectedAccountId" class="text-danger small d-block mt-1"></span>
                    </div>
                </div>

                <div class="mb-3 row">
                    <label asp-for="StartDate" class="col-sm-3 col-form-label">Начальная дата</label>
                    <div class="col-sm-9">
                        <input asp-for="StartDate" type="date" class="form-control" required />
                        <span asp-validation-for="StartDate" class="text-danger small d-block mt-1"></span>
                    </div>
                </div>

                <div class="mb-3 row">
                    <label asp-for="EndDate" class="col-sm-3 col-form-label">Конечная дата</label>
                    <div class="col-sm-9">
                        <input asp-for="EndDate" type="date" class="form-control" required />
                        <span asp-validation-for="EndDate" class="text-danger small d-block mt-1"></span>
                    </div>
                </div>

                <div class="mb-3 row">
                    <div class="col-sm-9 offset-sm-3">
                        <button type="submit" class="btn btn-primary px-4">
                            Сформировать отчет
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    @if (Model.MaxIncome != null)
    {        
        <div class="card shadow-sm">
            <div class="card-header bg-light py-2">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Результаты отчета</h5>
                    <div>
                        @if (ViewBag.Period != null)
                        {
                            <span class="text-muted small me-3">Период: @ViewBag.Period</span>
                        }
                        <form asp-action="Generate" method="post" class="d-inline">
                            <input type="hidden" asp-for="SelectedAccountId" />
                            <input type="hidden" asp-for="StartDate" />
                            <input type="hidden" asp-for="EndDate" />
                            <button type="submit" name="exportType" value="excel" class="btn btn-success btn-sm">
                                <i class="bi bi-file-earmark-excel"></i> Экспорт в Excel
                            </button>
                        </form>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-hover mb-0">
                        <thead class="thead-light">
                            <tr>
                                <th style="width: 60%">Показатель</th>
                                <th style="width: 40%">Результат</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>Самая большая статья доходов</td>
                                <td>
                                    @if (Model.MaxIncome.CategoryName != null)
                                    {
                                        <span>@Model.MaxIncome.CategoryName (@Model.MaxIncome.Amount.ToString("C"))</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Нет данных</span>
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td>Самая большая статья расходов</td>
                                <td>
                                    @if (Model.MaxExpense.CategoryName != null)
                                    {
                                        <span>@Model.MaxExpense.CategoryName (@Model.MaxExpense.Amount.ToString("C"))</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Нет данных</span>
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td>Самая популярная категория доходов</td>
                                <td>
                                    @if (Model.PopularIncomeCategory.CategoryName != null)
                                    {
                                        <span>@Model.PopularIncomeCategory.CategoryName (@Model.PopularIncomeCategory.OperationCount операций)</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Нет данных</span>
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td>Самая популярная категория расходов</td>
                                <td>
                                    @if (Model.PopularExpenseCategory.CategoryName != null)
                                    {
                                        <span>@Model.PopularExpenseCategory.CategoryName (@Model.PopularExpenseCategory.OperationCount операций)</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Нет данных</span>
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td>Отклонение расходов от доходов</td>
                                <td class="@(Model.Balance.Difference >= 0 ? "text-success" : "text-danger") fw-bold">
                                    @Model.Balance.Difference.ToString("C")
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

@section Styles {
    <style>
        .card {
            box-shadow: 0 0.15rem 1.75rem 0 rgba(33, 40, 50, 0.15);
        }

        .card-header {
            font-weight: 500;
            background-color: rgba(0,0,0,.03);
        }

        .table th {
            border-top: none;
            background-color: #f8f9fa;
        }

        select.form-select {
            cursor: pointer;
        }

        .input-validation-error {
            border-color: #dc3545;
        }

        .field-validation-error {
            color: #dc3545;
            font-size: 0.875em;
            display: block;
            margin-top: 0.25rem;
        }
    </style>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date();
            const monthAgo = new Date(today);
            monthAgo.setMonth(monthAgo.getMonth() - 1);

            document.getElementById('StartDate').valueAsDate = monthAgo;
            document.getElementById('EndDate').valueAsDate = today;
        });
    </script>
}